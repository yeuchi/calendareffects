<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
				xmlns:views="views.*" 
				xmlns:services="services.*"
				layout="absolute" 
				backgroundColor="0xFBD2F7"
				creationComplete="onCreationComplete()" viewSourceURL="srcview/index.html">
	<mx:Style>
        @font-face {
            src: local("Comic Sans MS");
            fontFamily: EmbeddedComicSansMS;
            fontWeight: normal;
        }
    </mx:Style>
    
    	<mx:Script>
		<![CDATA[
			import com.RotateEffect;
			import mx.effects.Parallel;
			import mx.events.EffectEvent;
			import mx.effects.Rotate;
			import mx.effects.Resize;
			import com.CImage;
			import mx.containers.Box;
			import mx.containers.VBox;
			import mx.containers.Canvas;
			import mx.controls.Image;
			import mx.containers.Panel;
			
			protected var index:int = 0;
			protected var imgList:Array;
			protected var posList:Array;
			[Bindable]protected var _wid:int;
			[Bindable]protected var _len:int;
			[Bindable]protected var _thumbWid:int = 100;
			[Bindable]protected var _duration:int = 2000;
			protected var parallel:Parallel;
			protected var rotateIn:RotateEffect;

			protected function onCreationComplete():void
			{
				var pt:Point = new Point(10, 140);
				posList = new Array();
				posList.push(pt);
				
				rotateIn  = new RotateEffect();
				rotateIn.duration = 4000;
			}

			private function onLoadCompleted(e:Event):void
			{
				imgList = photoService.imgList;	
				var img:Image = imgList[index];
				img.id = index.toString();
				img.width = _thumbWid;
				img.height = _thumbWid;
				img.buttonMode=true;
				img.useHandCursor=true;
				
				img.addEventListener(MouseEvent.CLICK, onClickImage);
				img.addEventListener(MouseEvent.MOUSE_OUT, onMouseOut);
				img.addEventListener(MouseEvent.MOUSE_OVER, onMouseOver);
				
				var pt:Point = posList[index];
				img.x = pt.x;
				img.y = pt.y;
				
				var newPt:Point = new Point();
				
				newPt.x = pt.x + _thumbWid + 10;
				newPt.y = pt.y;
				
				if ( ( newPt.x + _thumbWid ) >=  this.width ) {
					newPt.x = 10;
					newPt.y = pt.y + _thumbWid + 10;
				}
				posList.push(newPt);
				this.addChild(img);
				index ++;
				
				if ( index == photoService.photoFeed.length) {
					index = 0;
					onMoveStart();
				}
				_wid = this.width;
				_len = this.height;
			}
			
			private function onMouseOut(e:MouseEvent):void
			{
				var img:Image = e.currentTarget as Image;
				img.alpha = 1;
			}
			
			private function onMouseOver(e:MouseEvent):void
			{
				var img:Image = e.currentTarget as Image;
				img.alpha = .6;
			}
			
			private function onMoveStart():void
			{
				parallel = new Parallel();
				parallel.addEventListener(EffectEvent.EFFECT_END, onReStart);
				
				if ( index >= imgList.length)
					index =0;
				
				this.setChildIndex(imgList[index], this.numChildren-1);
				var last:int = (index>=imgList.length)?0:index;
				
				var img:Image = imgList[last] as Image;
				rotateIn.target = img;
				rotateIn.posFrom = new Array(10,img.x);
				rotateIn.posTo = new Array(20,img.x);
				sizeSmall.target = imgList[last];
				parallel.addChild(sizeSmall);
				parallel.addChild(rotateIn);
				parallel.end();
				parallel.play();
				
				index ++;
			}
			
			private function onReStart(e:Event):void
			{
				var i:int = (index==0)?imgList.length-1:index-1;
				var img:Image = imgList[i] as Image;
				img.width = this._thumbWid;
				img.height = this._thumbWid;
				var p:Point = this.posList[i];
				img.x = p.x;
				img.y = p.y;
					
				sizeBig.target = img;
				sizeBig.end();
				sizeBig.play();			
				parallel.removeEventListener(EffectEvent.EFFECT_END, onReStart);
				onMoveStart();
			}
			
/////////////////////////////////////////////////////////////////////
// events
			
			private function onClickImage(e:MouseEvent):void
            {
            	var img:CImage = e.currentTarget as CImage;
            	var url:String = img.url;
            	//url = url.toLowerCase();
            	url = url.replace("thumb/", "big/");
            	url = url.replace("Thumb", "");
            	url = url.replace("jpg", "JPG");
            	navigateToURL(new URLRequest(url), "_blank");
            }
            
            private function onClickSlideShow():void
            {
            	navigateToURL(new URLRequest("http://www.ctyeung.com/flex/gallery/FlexEx1.html"), "_blank");
            }
            
            private function onMouseOverLabel():void
            {
            	lblSlide.alpha = .5;
            }
            
            private function onMouseOutLabel():void
            {
            	lblSlide.alpha = 1;
            }
		]]>
	</mx:Script>
	
	<mx:Resize id="sizeBig" duration="{_duration}" widthFrom="{10}" heightFrom="{10}" widthTo="{_thumbWid}" heightTo="{_thumbWid}"/>
	<mx:Resize id="sizeSmall" duration="{_duration}" widthFrom="200" heightFrom="200" widthTo="{10}" heightTo="{10}"/>
	
	<services:PhotoService id="photoService" loadCompleted="onLoadCompleted(event)"/>
	<mx:Canvas>
	<mx:Label id="lblMonth" text="April" 
					fontSize="42" fontFamily="EmbeddedComicSansMS" color="0x9900FF" 
					x="{this.width/2-lblMonth.width/2}" y="10"/>
	</mx:Canvas>
		<mx:Label 	id="lblSlide" text="SlideShow" click="onClickSlideShow()" 
					buttonMode="true" useHandCursor="true" x="10" y="20"
					fontSize="20" fontFamily="EmbeddedComicSansMS" color="0x9900FF" 
					mouseOut="onMouseOutLabel()" mouseOver="onMouseOverLabel()"/>
</mx:Application>
