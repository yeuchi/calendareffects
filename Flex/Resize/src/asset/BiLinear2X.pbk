/*  Moudle:      BiLinear2X
*   
*   Description: BiLinear2X interpolation, magify by 2 only.
*
*   Input:       image
*   Output:      image resized 2X in width and height
*
*   Author:      C.T. Yeung      cty
*   Company:     Jostens 2009
*
*   History:  
*   13Feb       start coding.                   cty
*/

<languageVersion : 1.0;>

kernel ResizeBilinear
<   namespace :   "BiLinear2X";
    vendor :      "Jostens";
    version :     1;
    description : "enlarge width and height twice";
>
{      
    input image4 src;
    output pixel4 dst;
    
    void
    evaluatePixel()
    {
        //  position relatively to center(base)point
        float2 po = outCoord();
        float2 p;
        int x,y;

        po.x = po.x * .5;
        po.y = po.y * .5;
        
        x = int(mod(po.x*2.0, 2.0));
        y = int(mod(po.y*2.0, 2.0));
        
        if((0==x)&&(0==y))
            dst = sampleNearest(src, po);
            
        else if(0==x) {         // vertical convolution
            p = po;
            p.y = po.y - .5;
            dst = sampleNearest(src, p)/2.0;
            dst += sampleNearest(src, po)/2.0;
        }
        else if(0==y) {         // horizontal convolution
            p = po;
            p.x = po.x - .5;
            dst = sampleNearest(src, p)/2.0;
            dst += sampleNearest(src, po)/2.0;
        }
        else {
            p = po;
            p.x = po.x - .5;
            p.y = po.y - .5;
            dst = sampleNearest(src, p)/4.0;
            p.x = po.x;
            dst += sampleNearest(src, p)/4.0;
            p.x = po.x - .5;
            p.y = po.y;
            dst += sampleNearest(src, p)/4.0;
            dst += sampleNearest(src, po)/4.0;
        }
    }
}
